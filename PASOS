# PASO 0: --------------- USO VERSION PYTHON (CMD) ---------------
1.- Bajamos la version de python que queremos y la guardamos en la carpeta
una carpeta, en este caso Python38
>> C:\Entorno_Desarollo\Python38

2.- Entramos en la carpeta y vemos un ejecutable llamado "python", copiamos ese ejecutable
y luego cambiamos el de la copia por el nombre del ejecutable por python3.8

3.- Ejecutamos el python desde el cmd como python3.8
>> python3.8

# PASO 1: --------------- INSTALACION ANGULAR (CMD) ---------------
1.- Instalar NodeJS
>> Te vas a la pagina y te lo descargas

2.- Ver si esta bien instalado NodeJS y ver su version
>> npm -v
>> node -v

3.- Instalar angularCLI
>> npm install -g @angular/cli

4.- Ver si esta bien instalado angularCLI
>> ng v

# PASO 2: --------------- CREACION PROYECTO ANGULAR (CMD) ---------------
1.-Creo el workspace
En mi ruta por ejemplo:
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\FRONT
>> ng new WS-ANGULAR --createApplication="false"

2.-Creo la aplicacion
En mi ruta por ejemplo:
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\FRONT\WS-ANGULAR
>> ng generate application APP-PRUEBA
>> ng generate application APP-PRUEBA-ELECTRON

3.- Lanzo angular
En mi ruta: C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\FRONT\WS-ANGULAR
>> ng serve

# PASO 3: --------------- INSTALACION DE GIT (CMD) ---------------
1.- Me bajo git desde su pagina web

2.- Veo si esta bien instalado
>> git --version

3.- Los comandos para el primer proyecto creado
NOTA: Puede ser que dentro de los proyectos de Angular, exista una carpeta oculta .git por eso hay que borrarla.
En mi ruta por ejemplo: C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\FRONT\WS-ANGULAR
NOTA2: Creo un fichero llamado .gitignore al mismo nivel que esta la carpeta de .git


Abro bash en la ruta que deseo y escribo los siguiente comandos
En mi ruta por ejemplo: C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO
>> git init #Nota donde hago git init coge desde la carpeta de abajo C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\
>> git add .
>> git commit -m "first commit"
>> git branch -M master
>> git remote add origin https://github.com/slopezrap/PRUEBA_SER.git
>> git push -u origin master

4.- Actualizar
>> git add .
>> git commit -m "commit"
>> git branch -M master
>> git push -u origin master

5.- Para limpiar la cache de lo que puedo haber subido sin querer del node_modules que debe aparecer en .gitignore
>> git rm -r --cached PROYECTO_WEB/ELECTRON/node_modules/
>> git rm -r --cached PROYECTO_WEB/FRONT/WS-ANGULAR/node_modules/

# PASO 4: --------------- INSTALACION DE ENTORNO PYTHON Y DJANGO (CMD) ---------------
0.- Instalacion de pip y de virtualenv
Te bajas pip de su pagina
https://bootstrap.pypa.io/get-pip.py y lo guardas en un fichero get-pip.py
>> python get-pip.py
>> pip install virtualenv

1.- Creacion de entorno virtual
En mi ruta por ejemplo:
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK
>> python -m venv env_BACK

2.- Activo el entorno virtual
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\env_BACK\Scripts
>> activate

3.- Instalacion de Django y djangorestframework, con el entorno activado
>> pip install Django==2.1.8
>> pip install djangorestframework

4.- Creacion del workspace de django
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\
>> django-admin startproject WS_DJANGO

5.- Creacion de una app de django
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\WS_DJANGO
>> python manage.py startapp APP_PRUEBA_ELECTRON

6.- Hago las migraciones y corro el servidor
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\WS_DJANGO
>> python manage.py migrate
>> python manage.py makemigrations
>> python manage.py createsuperuser
>> python manage.py runserver

# PASO 5: --------------- INSTALACION DE ENTORNO PYINSTALLER (CMD) ---------------
Pagina donde ver como se hace un ejecutable de django con pyinstaller: https://github.com/pyinstaller/pyinstaller/wiki/Recipe-Executable-From-Django

Con el entorno activado
>> pip install pyinstaller
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\WS_DJANGO
>> pyinstaller --name=WS_DJANGO C:/Users/slope/OneDrive/Escritorio/EY/ANGULAR-ELECTRON-DJANGO/PROYECTO_WEB/BACK/WS_DJANGO/manage.py


NOTA: Si da algun error y se para nos vamos al entorno y vamos a
env_A_E_D\Lib\site-packages\PyInstaller\utils\hooks\subproc y nos metemos en el fichero django_import_finder.py y cambiamos la varaible "hiddenimports"
         -------------------------------------------------------------------
hiddenimports = list("settings.INSTALLED_APPS") + \
                 list("settings.TEMPLATE_CONTEXT_PROCESSORS") + \
                 list("settings.TEMPLATE_LOADERS") + \
                 ["settings.ROOT_URLCONF"]
         -------------------------------------------------------------------
por
         -------------------------------------------------------------------
hiddenimports = list(getattr(settings, "INSTALLED_APPS", [])) + \
                 list(getattr(settings, "TEMPLATE_CONTEXT_PROCESSORS", [])) + \
                 list(getattr(settings, "TEMPLATE_LOADERS", [])) + \
                 [getattr(settings, "ROOT_URLCONF", "")]
         -------------------------------------------------------------------
Para ver que esta bien:
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\WS_DJANGO\dist\WS_DJANGO
>> WS_DJANGO.exe runserver localhost:8000


# PASO 7: --------------- INSTALACION DE ELECTRON (CMD) ---------------
1.- Me creo una carpeta con el nombre ELECTRON o lo que me de la gana y ejecuto los siguiente comandos
En mi ruta por ejemplo: C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\ELECTRON
>> cd C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\ELECTRON
>> npm install electron -save-dev

2.- Me creo los siguientes ficheros en mi ruta
En mi ruta por ejemplo: C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\ELECTRON
Fichero: main.ts : fichero que crea un gui de electron por como esta configurado
Fichero: package.json : fichero que se ejecuta al llamar a electron y ejecuta el main.ts

# PASO 8: --------------- INSTALACION DE ANGULAR ELECTRON Y DJANGO (CMD) ---------------
Tengo el fichero ejecutable en mi ruta:
En mi ruta por ejemplo: C:\Users\slope\OneDrive\Escritorio\EY\ANGULAR-ELECTRON-DJANGO\PROYECTO_WEB\BACK\WS_DJANGO\dist
1.- Modificar el main.js y el package.json
----------------------------- main.js -----------------------------
const electron = require('electron')
    // Module to control application life.
const app = electron.app
    // Module to create native browser window.
const BrowserWindow = electron.BrowserWindow
const path = require('path')
const url = require('url')
    // Keep a global reference of the window object, if you don't, the window will
    // be closed automatically when the JavaScript object is garbage collected.
let mainWindow

function createWindow() {

    const path2 = "C:/Users/slope/OneDrive/Escritorio/EY/ANGULAR-ELECTRON-DJANGO/PROYECTO_WEB/BACK/WS_DJANGO/dist/WS_DJANGO/"
    console.log(path2)
	  var subpy = require('child_process').spawn(path2+'WS_DJANGO.exe', ['runserver', 'localhost:8000']);
    var mainAddr = 'http://localhost:8000';
    var openWindow = function() {
        mainWindow = new BrowserWindow({
            width: 800,
            height: 600,
            webPreferences: {
                nodeIntegration: true
              }
            })
        mainWindow.loadURL(
            url.format({
                pathname: "C:/Users/slope/OneDrive/Escritorio/EY/ANGULAR-ELECTRON-DJANGO/PROYECTO_WEB/FRONT/WS-ANGULAR/dist/APP-PRUEBA/index.html",
                protocol: "file:",
                slashes: true
            })
        );
        //mainWindow.loadFile("C:/Users/slope/OneDrive/Escritorio/EY/ANGULAR-ELECTRON-DJANGO/PROYECTO_WEB/FRONT/WS-ANGULAR/dist/APP-PRUEBA/index.html");
        // Open the DevTools.
        mainWindow.on('closed', function() {
            mainWindow = null;
            subpy.kill('SIGINT');
        })
    }
    var startUp = function() {
                openWindow();
    };
    startUp();
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow)
    // Quit when all windows are closed.
app.on('window-all-closed', function() {
    // On OS X it is common for applications and their menu bar
    // to stay active until the user quits explicitly with Cmd + Q
    if (process.platform !== 'darwin') {
        app.quit()
    }
})
app.on('activate', function() {
        // On OS X it's common to re-create a window in the app when the
        // dock icon is clicked and there are no other windows open.
        if (mainWindow === null) {
            createWindow()
        }
  })
------------------------------------------------------------------------
----------------------------- package.json -----------------------------
{
  "name": "angular-electron-django",
  "version": "0.0.0",
  "main": "main.js",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "start:electron": "cd C:/Users/slope/OneDrive/Escritorio/EY/ANGULAR-ELECTRON-DJANGO/PROYECTO_WEB/FRONT/WS-ANGULAR && ng build --base-href ./ && cd C:/Users/slope/OneDrive/Escritorio/EY/ANGULAR-ELECTRON-DJANGO/PROYECTO_WEB/ELECTRON/ && electron ."
  }
}
------------------------------------------------------------------------
2.- Para corre esto es_
>> npm run start:electron
